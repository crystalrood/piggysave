{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10500\viewh8100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
sensitive_publisher_ads_results = PrestoInsertOperator(\
    dep_list=[srt_wait, sampled_wait],\
    table='<TABLE:audience_network_sensitive_pub_measurement_results_stg>',\
    partion='ds=<DATEID>',\
    create="""\
    CREATE TABLE IF NOT EXISTS <TABLE:audience_network_sensitive_pub_measurement_results_stg> (\
        date_sampled VARCHAR,\
        percentile_name VARCHAR,\
        crow_fbid BIGINT,\
        final_tag VARCHAR,\
        is_bad BOOLEAN,\
        risk_level VARCHAR,\
        final_tag_unaltered VARCHAR,\
        plurality_tag_data VARCHAR,\
        app_id BIGINT,\
        bundle_fbid BIGINT,\
        ad_id BIGINT,\
        total_impressions DOUBLE,\
        creative_id BIGINT,\
        ds VARCHAR(10)\
    )\
    WITH (\
        partitioned_by = ARRAY['ds'],\
        retention_days = 90\
    )\
    """,\
\
    select="""\
    SELECT\
      DISTINCT date_sampled,\
      percentile_name,\
      crow_fbid,\
      final_tag,\
      NOT (final_tag LIKE '%suitable%'\
            OR final_tag LIKE '%allowfbref%'\
            OR final_tag LIKE '%lpfail%') AS is_bad,\
      risk_level,\
      final_tag_unaltered,\
      plurality_tag_data,\
      app_id,\
      bundle_fbid,\
      ad_id,\
      total_impressions,\
      creative_id\
    FROM (\
        SELECT\
          DISTINCT ds AS date_sampled,\
          percentile_name,\
          crow_fbid,\
          final_tag,\
          final_tag_unaltered,\
          plurality_tag_data,\
          app_id,\
          bundle_fbid,\
          ad_id,\
          total_impressions,\
          creative_id\
        FROM(\
            SELECT\
              DISTINCT a.ds,\
              percentile_name,\
              crow_fbid,\
              CASE\
                WHEN final_tag LIKE '%obs_ad_highrisk_category%' THEN 'suitable'\
                WHEN final_tag NOT LIKE '%rep_%' THEN 'suitable'\
                ELSE REGEXP_EXTRACT(final_tag, '^.*(rep_ad_|rep_)(((?!ad_)(?!flag))[a-z_]+)".*$', 2)\
              END AS final_tag,\
              final_tag as final_tag_unaltered,\
              plurality_tag_data,\
              app_id,\
              bundle_fbid,\
              ad_id,\
              total_impressions,\
              creative_id\
            FROM (\
                (\
                  SELECT\
                    ds,\
                    app_id,\
                    bundle_fbid,\
                    ad_id,\
                    total_impressions,\
                    creative_id,\
                    percentile_name,\
                    crow_fbid\
                  FROM\
                    audience_network_sensitive_pub_ads_mapped_with_fbid\
                  WHERE ds BETWEEN '<DATEID-20>'\
                    AND '<DATEID>'\
                ) AS a\
                LEFT JOIN (\
                  SELECT\
                    DISTINCT object_id,\
                    -- force plurality reviews to be null if the first review was SFA\
                    -- plurality reviews are NOT guaranteed to be null because a sample\
                    -- can be sampled across multiple days and receive different results\
                    -- due to factors such as changing LPs and reviewer inconsistency\
                    arbitrary(\
                      IF(\
                        REGEXP_LIKE(reviewer_tag_data, 'rep_ad_suitable|text|lpfail'),\
                        reviewer_tag_data,\
                        plurality_tag_data\
                      )\
                    ) AS final_tag,\
                    arbitrary(reviewer_tag_data) AS reviewer_tag_data,\
                    arbitrary(plurality_tag_data) AS plurality_tag_data\
                  FROM(\
                      SELECT\
                        DISTINCT ds,\
                        object_id,\
                        pluralrity_decision_data AS plurality_tag_data,\
                        decision_data AS reviewer_tag_data,\
                        CASE\
                          WHEN pluralrity_decision_data IS NULL THEN decision_data\
                          ELSE decision_data\
                        END AS decision\
                      FROM(\
                          SELECT\
                            a.ds,\
                            a.object_id,\
                            a.decision_data,\
                            b.pluralrity_decision_data\
                          FROM (\
                              (\
                                SELECT\
                                  ds,\
                                  object_id,\
                                  decision_data\
                                FROM\
                                  single_review_tool_main:operations\
                                WHERE\
                                  ds BETWEEN '<DATEID-20>'\
                                  AND '<DATEID>'\
                                  AND queue_id IN (1231670233632561) --first pass\
                                  AND event IN ('job_decision_success')\
                                GROUP BY\
                                  1,\
                                  2,\
                                  3\
                              ) AS a\
                              LEFT JOIN (\
                                SELECT\
                                  object_id,\
                                  arbitrary(decision_data) AS pluralrity_decision_data\
                                FROM\
                                  single_review_tool_main:operations\
                                WHERE\
                                  ds BETWEEN '<DATEID-20>'\
                                  AND '<DATEID>'\
                                  AND queue_id IN (220999775123315)\
                                  AND event IN ('job_decision_success')\
                                GROUP BY\
                                  1\
                              ) AS b\
                              ON a.object_id = b.object_id\
                            )\
                        )\
                    )\
                  GROUP BY\
                    1\
                ) AS b\
                ON a.crow_fbid = b.object_id\
              )\
          )\
      ) pvi\
      LEFT OUTER JOIN (\
        SELECT\
          violation,\
          risk_level\
        FROM\
          ads_integrity_violations\
        WHERE\
          ds = '<LATEST_DS:ads_integrity_violations>'\
          AND violation <> 'adfarm'\
      ) violations\
      ON pvi.final_tag = violations.violation\
    """,\
)\
}